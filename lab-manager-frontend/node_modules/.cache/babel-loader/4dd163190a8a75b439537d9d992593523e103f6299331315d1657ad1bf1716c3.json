{"ast":null,"code":"var _jsxFileName = \"/Users/eazyan/Documents/Laba/lab-manager-frontend/src/components/Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Timeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [equipments, setEquipments] = useState([]);\n  useEffect(() => {\n    // Загружаем бронирования\n    axios.get('http://127.0.0.1:8000/bookings/').then(response => {\n      setBookings(response.data);\n    }).catch(error => {\n      console.error('Error fetching bookings:', error);\n    });\n\n    // Загружаем оборудование\n    axios.get('http://127.0.0.1:8000/equipments/').then(response => {\n      setEquipments(response.data);\n    }).catch(error => {\n      console.error('Error fetching equipment:', error);\n    });\n  }, []);\n  const formatTime = time => {\n    const [hours, minutes] = time.split(\":\");\n    return `${hours}:${minutes}`;\n  };\n  const sortedBookings = bookings.sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n  const calculateGridPosition = time => {\n    const hour = parseInt(time.split(':')[0], 10);\n    const minute = parseInt(time.split(':')[1], 10);\n    return hour + minute / 60; // Преобразуем в количество часов с точностью до минут\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"08:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"09:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"10:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"11:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"12:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"13:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"14:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"15:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slot\",\n        children: \"16:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-body\",\n      children: sortedBookings.map((booking, index) => {\n        const equipment = equipments.find(e => e.id === booking.equipment_id);\n        const startTime = formatTime(booking.start_time.split('T')[1].slice(0, 5));\n        const endTime = formatTime(booking.end_time.split('T')[1].slice(0, 5));\n\n        // Вычисляем позиции для start и end времени\n        const startGrid = calculateGridPosition(startTime);\n        const endGrid = calculateGridPosition(endTime);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-card\",\n          style: {\n            gridRowStart: startGrid + 1,\n            // Начинаем с позиции start\n            gridRowEnd: endGrid + 1,\n            // Заканчиваем на позиции end\n            gridColumnStart: 1,\n            // Можно добавить дополнительное позиционирование по оборудованию\n            gridColumnEnd: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: equipment ? equipment.name : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: equipment ? equipment.description : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [startTime, \" - \", endTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"UqftlhnWVQipjrOR/ZxhQ/NyH9A=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Timeline","_s","bookings","setBookings","equipments","setEquipments","get","then","response","data","catch","error","console","formatTime","time","hours","minutes","split","sortedBookings","sort","a","b","Date","start_time","calculateGridPosition","hour","parseInt","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","booking","index","equipment","find","e","id","equipment_id","startTime","slice","endTime","end_time","startGrid","endGrid","style","gridRowStart","gridRowEnd","gridColumnStart","gridColumnEnd","name","description","_c","$RefreshReg$"],"sources":["/Users/eazyan/Documents/Laba/lab-manager-frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Timeline.css';\n\nconst Timeline = () => {\n  const [bookings, setBookings] = useState([]);\n  const [equipments, setEquipments] = useState([]);\n\n  useEffect(() => {\n    // Загружаем бронирования\n    axios.get('http://127.0.0.1:8000/bookings/')\n      .then((response) => {\n        setBookings(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching bookings:', error);\n      });\n\n    // Загружаем оборудование\n    axios.get('http://127.0.0.1:8000/equipments/')\n      .then((response) => {\n        setEquipments(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching equipment:', error);\n      });\n  }, []);\n\n  const formatTime = (time) => {\n    const [hours, minutes] = time.split(\":\");\n    return `${hours}:${minutes}`;\n  };\n\n  const sortedBookings = bookings.sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n\n  const calculateGridPosition = (time) => {\n    const hour = parseInt(time.split(':')[0], 10);\n    const minute = parseInt(time.split(':')[1], 10);\n    return hour + (minute / 60); // Преобразуем в количество часов с точностью до минут\n  };\n\n  return (\n    <div className=\"timeline\">\n      <div className=\"timeline-header\">\n        <div className=\"time-slot\">08:00</div>\n        <div className=\"time-slot\">09:00</div>\n        <div className=\"time-slot\">10:00</div>\n        <div className=\"time-slot\">11:00</div>\n        <div className=\"time-slot\">12:00</div>\n        <div className=\"time-slot\">13:00</div>\n        <div className=\"time-slot\">14:00</div>\n        <div className=\"time-slot\">15:00</div>\n        <div className=\"time-slot\">16:00</div>\n      </div>\n      <div className=\"timeline-body\">\n        {sortedBookings.map((booking, index) => {\n          const equipment = equipments.find(e => e.id === booking.equipment_id);\n          const startTime = formatTime(booking.start_time.split('T')[1].slice(0, 5));\n          const endTime = formatTime(booking.end_time.split('T')[1].slice(0, 5));\n\n          // Вычисляем позиции для start и end времени\n          const startGrid = calculateGridPosition(startTime);\n          const endGrid = calculateGridPosition(endTime);\n\n          return (\n            <div\n              key={index}\n              className=\"booking-card\"\n              style={{\n                gridRowStart: startGrid + 1, // Начинаем с позиции start\n                gridRowEnd: endGrid + 1,    // Заканчиваем на позиции end\n                gridColumnStart: 1, // Можно добавить дополнительное позиционирование по оборудованию\n                gridColumnEnd: 2,\n              }}\n            >\n              <h3>{equipment ? equipment.name : 'Loading...'}</h3>\n              <p>{equipment ? equipment.description : 'Loading...'}</p>\n              <p>{startTime} - {endTime}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}