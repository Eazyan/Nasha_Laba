{"ast":null,"code":"var _jsxFileName = \"/Users/eazyan/Documents/Laba/lab-manager-frontend/src/components/Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Timeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [equipments, setEquipments] = useState([]);\n  const [timeSlots, setTimeSlots] = useState([]);\n  useEffect(() => {\n    // Загружаем оборудование\n    axios.get('http://127.0.0.1:8000/equipments/').then(response => {\n      setEquipments(response.data);\n    }).catch(error => {\n      console.error('Error fetching equipment:', error);\n    });\n\n    // Загружаем временные слоты\n    axios.get('http://127.0.0.1:8000/time-slots/').then(response => {\n      setTimeSlots(response.data);\n    }).catch(error => {\n      console.error('Error fetching time slots:', error);\n    });\n  }, []);\n\n  // Форматируем время в HH:MM\n  const formatTime = time => {\n    if (time && time.includes(\"T\")) {\n      const timePart = time.split('T')[1]; // Берем только время из формата \"2025-03-01T10:00:00\"\n      return timePart.slice(0, 5); // Возвращаем только часы и минуты\n    }\n    return \"00:00\"; // Возвращаем дефолтное время, если его нет\n  };\n  const calculatePosition = (startTime, endTime) => {\n    const startHour = parseInt(startTime.split(':')[0], 10);\n    const endHour = parseInt(endTime.split(':')[0], 10);\n    const startMinute = parseInt(startTime.split(':')[1], 10);\n    const endMinute = parseInt(endTime.split(':')[1], 10);\n    const startTotalMinutes = startHour * 60 + startMinute;\n    const endTotalMinutes = endHour * 60 + endMinute;\n    return {\n      top: (startTotalMinutes - 8 * 60) * 2,\n      // Начало с 8:00\n      height: (endTotalMinutes - startTotalMinutes) * 2 // Высота карточки\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-header\",\n      children: Array.from({\n        length: 16\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-hour\",\n        children: `${8 + i}:00`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-body\",\n      children: equipments.map((equipment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-equipment\",\n        children: timeSlots.map((slot, idx) => slot.equipment_id === equipment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-slot\",\n          style: {\n            top: `${calculatePosition(formatTime(slot.start_time), formatTime(slot.end_time)).top}px`,\n            height: `${calculatePosition(formatTime(slot.start_time), formatTime(slot.end_time)).height}px`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-slot-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: equipment.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [formatTime(slot.start_time), \" - \", formatTime(slot.end_time)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this) : null)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"aifMXGAh4x8maD9GGNCjUhIV1Ok=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Timeline","_s","equipments","setEquipments","timeSlots","setTimeSlots","get","then","response","data","catch","error","console","formatTime","time","includes","timePart","split","slice","calculatePosition","startTime","endTime","startHour","parseInt","endHour","startMinute","endMinute","startTotalMinutes","endTotalMinutes","top","height","className","children","Array","from","length","_","i","fileName","_jsxFileName","lineNumber","columnNumber","map","equipment","index","slot","idx","equipment_id","id","style","start_time","end_time","name","_c","$RefreshReg$"],"sources":["/Users/eazyan/Documents/Laba/lab-manager-frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Timeline.css';\n\nconst Timeline = () => {\n  const [equipments, setEquipments] = useState([]);\n  const [timeSlots, setTimeSlots] = useState([]);\n\n  useEffect(() => {\n    // Загружаем оборудование\n    axios.get('http://127.0.0.1:8000/equipments/')\n      .then((response) => {\n        setEquipments(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching equipment:', error);\n      });\n\n    // Загружаем временные слоты\n    axios.get('http://127.0.0.1:8000/time-slots/')\n      .then((response) => {\n        setTimeSlots(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching time slots:', error);\n      });\n  }, []);\n\n  // Форматируем время в HH:MM\n  const formatTime = (time) => {\n    if (time && time.includes(\"T\")) {\n      const timePart = time.split('T')[1]; // Берем только время из формата \"2025-03-01T10:00:00\"\n      return timePart.slice(0, 5); // Возвращаем только часы и минуты\n    }\n    return \"00:00\"; // Возвращаем дефолтное время, если его нет\n  };\n\n  const calculatePosition = (startTime, endTime) => {\n    const startHour = parseInt(startTime.split(':')[0], 10);\n    const endHour = parseInt(endTime.split(':')[0], 10);\n    const startMinute = parseInt(startTime.split(':')[1], 10);\n    const endMinute = parseInt(endTime.split(':')[1], 10);\n\n    const startTotalMinutes = startHour * 60 + startMinute;\n    const endTotalMinutes = endHour * 60 + endMinute;\n\n    return {\n      top: (startTotalMinutes - 8 * 60) * 2, // Начало с 8:00\n      height: (endTotalMinutes - startTotalMinutes) * 2, // Высота карточки\n    };\n  };\n\n  return (\n    <div className=\"timeline\">\n      <div className=\"timeline-header\">\n        {/* Столбцы для каждого часа с 08:00 до 23:00 */}\n        {Array.from({ length: 16 }, (_, i) => (\n          <div key={i} className=\"timeline-hour\">{`${8 + i}:00`}</div>\n        ))}\n      </div>\n      <div className=\"timeline-body\">\n        {/* Отображаем карточки для временных слотов */}\n        {equipments.map((equipment, index) => (\n          <div key={index} className=\"timeline-equipment\">\n            {timeSlots.map((slot, idx) => (\n              slot.equipment_id === equipment.id ? (\n                <div\n                  key={idx}\n                  className=\"timeline-slot\"\n                  style={{\n                    top: `${calculatePosition(formatTime(slot.start_time), formatTime(slot.end_time)).top}px`,\n                    height: `${calculatePosition(formatTime(slot.start_time), formatTime(slot.end_time)).height}px`,\n                  }}\n                >\n                  <div className=\"timeline-slot-info\">\n                    <strong>{equipment.name}</strong>\n                    <p>{formatTime(slot.start_time)} - {formatTime(slot.end_time)}</p>\n                  </div>\n                </div>\n              ) : null\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}