{"ast":null,"code":"var _jsxFileName = \"/Users/eazyan/Documents/Laba/lab-manager-frontend/src/components/Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Timeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [equipments, setEquipments] = useState([]);\n  useEffect(() => {\n    // Загружаем бронирования\n    axios.get('http://127.0.0.1:8000/bookings/').then(response => {\n      console.log('Bookings:', response.data); // Проверка данных бронирований\n      setBookings(response.data);\n    }).catch(error => {\n      console.error('Error fetching bookings:', error);\n    });\n\n    // Загружаем оборудование\n    axios.get('http://127.0.0.1:8000/equipments/').then(response => {\n      console.log('Equipments:', response.data); // Проверка данных оборудования\n      setEquipments(response.data);\n    }).catch(error => {\n      console.error('Error fetching equipment:', error);\n    });\n  }, []);\n  const formatTime = time => {\n    if (time && time.includes(\"T\")) {\n      const timePart = time.split('T')[1]; // Берем только время из формата \"2025-03-01T10:00:00\"\n      return timePart.slice(0, 5); // Возвращаем только часы и минуты (например, \"10:00\")\n    }\n    return \"00:00\"; // Возвращаем дефолтное время, если его нет\n  };\n  const calculateRow = (startTime, endTime) => {\n    const [startHour, startMinute] = startTime.split(':').map(Number); // Часы и минуты\n    const [endHour, endMinute] = endTime.split(':').map(Number); // Часы и минуты\n\n    // Переводим время в минуты с начала дня\n    const startTotalMinutes = startHour * 60 + startMinute;\n    const endTotalMinutes = endHour * 60 + endMinute;\n    return [startTotalMinutes, endTotalMinutes];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Array.from({\n            length: 16\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: `${8 + i}:00`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bookings.map((booking, index) => {\n          const equipment = equipments.find(e => e.id === booking.equipment_id);\n\n          // Если время не задано, используем дефолтное значение \"00:00\"\n          const startTime = formatTime(booking.start_time ? booking.start_time.split('T')[1].slice(0, 5) : \"00:00\");\n          const endTime = formatTime(booking.end_time ? booking.end_time.split('T')[1].slice(0, 5) : \"00:00\");\n          const [startTotalMinutes, endTotalMinutes] = calculateRow(startTime, endTime);\n          const startHour = Math.floor(startTotalMinutes / 60);\n          const startMinute = startTotalMinutes % 60;\n          const endHour = Math.floor(endTotalMinutes / 60);\n          const endMinute = endTotalMinutes % 60;\n          const duration = endTotalMinutes - startTotalMinutes;\n          const colSpan = Math.ceil(duration / 60);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Array.from({\n              length: startHour - 8\n            }).map((_, idx) => /*#__PURE__*/_jsxDEV(\"td\", {}, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 72\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: colSpan,\n              className: \"booking-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"booking-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: equipment ? equipment.name : 'Loading...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: equipment ? equipment.description : 'Loading...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [startTime, \" - \", endTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 23 - endHour\n            }).map((_, idx) => /*#__PURE__*/_jsxDEV(\"td\", {}, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 71\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"UqftlhnWVQipjrOR/ZxhQ/NyH9A=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Timeline","_s","bookings","setBookings","equipments","setEquipments","get","then","response","console","log","data","catch","error","formatTime","time","includes","timePart","split","slice","calculateRow","startTime","endTime","startHour","startMinute","map","Number","endHour","endMinute","startTotalMinutes","endTotalMinutes","className","children","Array","from","length","_","i","fileName","_jsxFileName","lineNumber","columnNumber","booking","index","equipment","find","e","id","equipment_id","start_time","end_time","Math","floor","duration","colSpan","ceil","idx","name","description","_c","$RefreshReg$"],"sources":["/Users/eazyan/Documents/Laba/lab-manager-frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Timeline.css';\n\nconst Timeline = () => {\n  const [bookings, setBookings] = useState([]);\n  const [equipments, setEquipments] = useState([]);\n\n  useEffect(() => {\n    // Загружаем бронирования\n    axios.get('http://127.0.0.1:8000/bookings/')\n      .then((response) => {\n        console.log('Bookings:', response.data);  // Проверка данных бронирований\n        setBookings(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching bookings:', error);\n      });\n\n    // Загружаем оборудование\n    axios.get('http://127.0.0.1:8000/equipments/')\n      .then((response) => {\n        console.log('Equipments:', response.data);  // Проверка данных оборудования\n        setEquipments(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching equipment:', error);\n      });\n  }, []);\n\n  const formatTime = (time) => {\n    if (time && time.includes(\"T\")) {\n      const timePart = time.split('T')[1];  // Берем только время из формата \"2025-03-01T10:00:00\"\n      return timePart.slice(0, 5);  // Возвращаем только часы и минуты (например, \"10:00\")\n    }\n    return \"00:00\";  // Возвращаем дефолтное время, если его нет\n  };\n\n  const calculateRow = (startTime, endTime) => {\n    const [startHour, startMinute] = startTime.split(':').map(Number); // Часы и минуты\n    const [endHour, endMinute] = endTime.split(':').map(Number); // Часы и минуты\n\n    // Переводим время в минуты с начала дня\n    const startTotalMinutes = startHour * 60 + startMinute;\n    const endTotalMinutes = endHour * 60 + endMinute;\n\n    return [startTotalMinutes, endTotalMinutes];\n  };\n\n  return (\n    <div className=\"timeline\">\n      <table>\n        <thead>\n          <tr>\n            {/* Столбцы для каждого часа с 08:00 до 23:00 */}\n            {Array.from({ length: 16 }, (_, i) => (\n              <th key={i}>{`${8 + i}:00`}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {/* Проходим по каждому бронированию */}\n          {bookings.map((booking, index) => {\n            const equipment = equipments.find(e => e.id === booking.equipment_id);\n\n            // Если время не задано, используем дефолтное значение \"00:00\"\n            const startTime = formatTime(booking.start_time ? booking.start_time.split('T')[1].slice(0, 5) : \"00:00\");\n            const endTime = formatTime(booking.end_time ? booking.end_time.split('T')[1].slice(0, 5) : \"00:00\");\n\n            const [startTotalMinutes, endTotalMinutes] = calculateRow(startTime, endTime);\n\n            const startHour = Math.floor(startTotalMinutes / 60);\n            const startMinute = startTotalMinutes % 60;\n\n            const endHour = Math.floor(endTotalMinutes / 60);\n            const endMinute = endTotalMinutes % 60;\n\n            const duration = endTotalMinutes - startTotalMinutes;\n            const colSpan = Math.ceil(duration / 60);\n\n            return (\n              <tr key={index}>\n                {/* Пустые ячейки до начала бронирования */}\n                {Array.from({ length: startHour - 8 }).map((_, idx) => <td key={idx}></td>)}\n\n                {/* Ячейки для бронирования */}\n                <td colSpan={colSpan} className=\"booking-cell\">\n                  <div className=\"booking-info\">\n                    <strong>{equipment ? equipment.name : 'Loading...'}</strong>\n                    <p>{equipment ? equipment.description : 'Loading...'}</p>\n                    <p>{startTime} - {endTime}</p>\n                  </div>\n                </td>\n\n                {/* Пустые ячейки после окончания бронирования */}\n                {Array.from({ length: 23 - endHour }).map((_, idx) => <td key={idx}></td>)}\n\n                {/* Добавляем пустую ячейку для столбца 23:00 */}\n                <td></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}